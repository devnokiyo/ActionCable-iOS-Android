upstream app {
  server unix:///app/tmp/sockets/puma.sock;
}

server {
  # ATSやSSLハンドシェイクの問題によりプロトタイプの動作目的でHTTPで通信を許可します。
  # Let's EncryptなどのSSL証明証を利用すればwssで通信可能です。(確認済み)
  listen 80;
  # listen 443 ssl http2;
  server_name devnokiyo.example.com;

  ssl_certificate     /etc/nginx/cert/server.crt;
  ssl_certificate_key /etc/nginx/cert/privkey.pem;

  ssl_ciphers  ECDHE+AESGCM:DHE+AESGCM:HIGH:!aNULL:!MD5;
  ssl_session_cache shared:SSL:1m;
  ssl_session_timeout 5m;
  ssl_prefer_server_ciphers on;

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  root /app/public;

  try_files $uri @app;
  client_max_body_size 10m;
  error_page 404             /404.html;
  error_page 505 502 503 504 /500.html;

  location @app {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-CSRF-Token $http_x_csrf_token;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass http://app;
  }

  # ActionCableのエンドポイントはWebSocketのプロトコル(ws/wss)で通信できるようにします。
  location /cable {
    proxy_pass http://app/cable;
    # パッチを当てるとhttp2.0で通信できるようですが検証していません。
    proxy_http_version 1.1;
    proxy_set_header Upgrade websocket;
    proxy_set_header Connection Upgrade;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
}
